2018-03-03T05:26:06.058Z ERROR   Script                  :constructor()            Failed to parse /Users/gustavomendez/Documents/Universidad ITC/Octavo Semestre/Proyecto Integrador/cursoUdemy/grade-exchanger/lib/admin-connection.js: The keyword 'const' is reserved (18:0)
 {"0":"'use strict';\n/**\n * Part of a course on Hyperledger Fabric: \n * http://ACloudFan.com\n * \n * Demonstrates the use of the admin connection class\n * 1. Create a FileSystemCard store object\n * 2. Create an instance of the AdminConnection object\n * 3. Connect as the PeerAdmin\n * 4. List the deployed Business Network Apps\n * 5. Disconnect \n * 6. Connect as the Network Admin for airlinev7\n * 7. Ping airlinev7\n * 8. Disconnect\n */\n\n// Need the card store instance\nconst FileSystemCardStore = require('composer-common').FileSystemCardStore;\nconst AdminConnection = require('composer-admin').AdminConnection;\n\n// Used as the card for all calls\nconst   cardNameForPeerAdmin   = \"PeerAdmin@hlfv1\";\nconst   cardNameForNetworkAdmin   = \"admin@grade-exchanger\";\nconst   appToBePinged = \"grade-exchanger\";\n\n// 1. Create instance of file system card store\nconst cardStore = new FileSystemCardStore();\n\n// 2. Create Admin Connection object for the fabric\nconst cardStoreObj = { cardStore: cardStore };\nconst adminConnection = new AdminConnection(cardStoreObj);\n\n// 3. Initiate a connection as PeerAdmin\nreturn adminConnection.connect(cardNameForPeerAdmin).then(function(){\n    console.log(\"Admin Connected Successfully!!!\");\n    // Display the name and version of the network app\n   listBusinessNetwork();\n}).catch((error)=>{\n    console.log(error);\n});\n\n\n// Extracts information about the network\nfunction listBusinessNetwork(){\n    // 4. List the network apps\n    adminConnection.list().then((networks)=>{\n        console.log(\"Successfully retrieved the deployed Networks: \",networks);\n        // 5. Disconnect\n        adminConnection.disconnect();\n        reconnectAsNetworkAdmin();\n    }).catch((error)=>{\n        console.log(error);\n    });\n}\n\n// Ping the network\nfunction reconnectAsNetworkAdmin(){\n\n    // 6. Reconnect with the card for network admin\n    return adminConnection.connect(cardNameForNetworkAdmin).then(function(){\n        console.log(\"Network Admin Connected Successfully!!!\");\n        // 7. Ping the BNA \n        adminConnection.ping(appToBePinged).then(function(response){\n            console.log(\"Ping response: \",response);\n            // 8. Disconnect\n            adminConnection.disconnect();\n        }).catch((error)=>{\n            console.log(error);\n        });\n    });\n\n    \n}\n\n"}$
